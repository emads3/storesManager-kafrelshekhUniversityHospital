<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAABHNJREFUSEu1
        lVtMFHcYxYf/zOwOKFI2G3dmd2cXi8ZVIQGDWC7FUiuYQLZQIxakXEShtEUe+m7SpEmTJtW+Nb0Y39qk
        7QMWRGABUQhF5bbcryulatukJD6QJrZNTr//zIKogLz0JL/MzPc/3zkz2YcVAAib6ewcs5ybZ8eIauJz
        4svwvf/sLLNVTTOhcpIJNYtMqFtiwvt/sPCmYGZvVFAxzWIqZ9indH1UMcVQPsFQOSWhataK8kkGPqPz
        x8QVuveUjTHhzBwTav/cQkHphHi8dFxcOj0q4oPFnTj/q4a6X1TULRD8uqji/H0N9Q9VlI5LIP9j8teX
        jIhCeUgMp2xQ8PaIWH8qKP5bNrEdtfdUvDunomZGRfX0E/hzzayK2pCK96iw+p4NtMP5pmhok4ITA6L/
        RL9In2/DOQqomiQmHKgad+DMGvizAZ2d5aX8JRY00D5o/0I47ukC/x3R5e8Tl4uGo6lARfm4irJRh8nI
        BtBZ+ZgDFRMqKqmobMoO/20RlJP5XEHuTfFKbo+I0/TWJWMqiimgOLgFyFdCRSX0QqW0678biZyb4tBT
        BbkDku1ol/R30aiKohENJ4dVnBzaGisqCtLuqIZT4xqO3pTwxs9SGo3NgqxO6Z1X2yUUDmsopKWCQWLg
        xTyrt6ikMKghq0NGRrN0kUZmwaEm6XJ6uxV5tJTXT9x9MeupYNZpZGR370Bqo3SbRmZBUoMcSAtsR06f
        hpzbBL8SK8q/E7c6Wztfq4KHOvKnXcZ5drcdSVflBzQ2CxKvyrdSWqOR3UuHYZ7VRnOu/N905M64Vj0Z
        N+xIbJR/pyOzwNcgNyU0RiGjW0Nmj4YjQ05jcSvKua/j9UmXsZfBuaUhJWDDviZ5no7Ngl3fyp/FN8hI
        7dKQSobMMReOzLuNgM302qKOzHEXDtMOx9gnfI3bEP+THCCLWeD4RH4zjn7k5E6nSZcTr0zoSA95jKD1
        lL7gweFRHQfJy0m+Ed4lvC0WuC5bPiKbWUCKcbZaQ7taYpDQ7jRIJOPBMR0pc8+XpIXikRzUDQ8nocPc
        4fgCO+Husv61rUBMIOtqgRBzQf7Q0WXFvk4XfG1k5AQoYERH0oLXCOZKCe1GwpAOH4X6jMCwl0PPjg4r
        bF/IlylSJvuTApI99gdrr61dwZ4bbuxucZm0UuGwB/unvdg/6YWv34PdAXO+6iH2tLth74iC7ZqyIB9i
        B3jgswWCuJelRzcpoR0dCuJ7dcTRYtz1F0Cel2/peKkzCjvalEeWArGIR/G85wpIIktiucqP1mBkQIHz
        jgZvrwd6hxtuCnNfC9Psgk5v7OnR4R30gHsjG5UHUp5YQhlRZtT6BVxyhD0iTb5o+cpyXVm2tCmI6YmF
        OkChI14D56Absb128DNLq/KP/LW1IWIvy6XdKJqZKaSNCrj4H2uccID5Iz62XGLfWfvYNWWJtSowaFaW
        2ffWILtkuRKRJRaT10dIdCZwVrRZwYpkwk0kE0eIY2GyiRRiF6EILRTK4eHrfcH/B4T/AMj+dqeDT3vI
        AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>